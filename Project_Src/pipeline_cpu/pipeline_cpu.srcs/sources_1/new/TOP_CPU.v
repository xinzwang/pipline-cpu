`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2021/09/01 09:40:06
// Design Name: 
// Module Name: TOP_CPU
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////
//ï¿½ï¿½Ë®ï¿½ß¶ï¿½ï¿½ï¿½Ä£ï¿½ï¿½
//ï¿½ï¿½ï¿½ï¿½Ä£ï¿½é¶¨ï¿½ï¿½æ·¶ï¿½ï¿½[ï¿½ÅºÅ·ï¿½ï¿½ï¿½Ä£ï¿½ï¿½ï¿½ï¿½]_[ï¿½ÅºÅ½ï¿½ï¿½ï¿½Ä£ï¿½ï¿½ï¿½ï¿½]_[ï¿½Åºï¿½ï¿½ï¿½ï¿½ï¿½]

module TOP_CPU(
    input clk,
    input rst
);
//pcï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
wire [5:0] CL_PC_stall;//ctrlï¿½ï¿½ï¿½Øµï¿½ï¿½ï¿½Í£ï¿½Åºï¿½
wire CL_PC_flush;//ctrlï¿½ï¿½ï¿½Øµï¿½ï¿½ï¿½Í£ï¿½Åºï¿½
wire [31:0] CL_PC_newpc;//Ctrllï¿½ï¿½ï¿½ï¿½ï¿½ì³£ï¿½ï¿½ï¿½ï¿½pcï¿½ï¿½ï¿½Åºï¿½
wire ID_PC_branchflag;//IDï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½×ªï¿½Åºï¿½
wire [31:0] ID_PC_branch_taraddr;//Idï¿½ï¿½×ªï¿½ï¿½Ä¿ï¿½Äµï¿½Ö·
wire [31:0] PC_OUT_1;//ï¿½ï¿½Â·ï¿½ï¿½ï¿½ß¶ï¿½ï¿½ï¿½
//IMï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
wire [31:0] PC_IM_addr;//pcï¿½ï¿½ï¿½ï¿½ï¿½È¡Ö¸ï¿½ï¿½Ö?
//IFIDï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
wire [5:0] CL_IFID_stall;//ctrlï¿½ï¿½ï¿½Øµï¿½ï¿½ï¿½Í£ï¿½Åºï¿½
wire CL_IFID_flush;//ctrlï¿½ï¿½ï¿½Øµï¿½ï¿½ï¿½Í£ï¿½Åºï¿½
wire [31:0] PC_IFID_pc;//pcï¿½ÐµÄµï¿½Ö·
wire [31:0] IM_IFID_ins;//imï¿½Ðµï¿½Ö¸ï¿½ï¿½
//IDï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
wire [31:0] IFID_ID_pc;//ï¿½ï¿½ï¿½ï¿½idï¿½ï¿½pcÖµ
wire [31:0] IFID_ID_ins;//ï¿½ï¿½ï¿½ï¿½pcï¿½ï¿½insÖµ
wire [7:0] EX_ID_aluop;//ï¿½ï¿½ï¿½ï¿½×¶ï¿½Òªï¿½ï¿½ï¿½Ðµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
wire EX_ID_wreg;//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½ï¿½Ç·ï¿½ï¿½ï¿½ï¿½ï¿½ÒªÐ´Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½
wire [31:0] EX_ID_wreg_addr;//ï¿½ï¿½ï¿½Ø´æ´¢Ö¸ï¿½ï¿½ï¿½Ó¦ï¿½Ä´æ´¢ï¿½ï¿½ï¿½ï¿½Ö?
wire [31:0] EX_ID_wreg_data;//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ÒªÐ´ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Öµ
wire MEM_ID_wreg;//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½ï¿½Ç·ï¿½ÒªÐ´Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½
wire [31:0] MEM_ID_wreg_addr;//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½ÒªÐ´Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Ö·
wire [31:0] MEM_ID_wreg_data;//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½ÒªÐ´Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
wire IDEX_ID_isindelayslot;//ï¿½ï¿½ï¿½ï¿½ï¿½Ó³Ù²ï¿½ï¿½ï¿½
wire [31:0] RF_ID_reg1_data;//ï¿½Ä´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ÖµÒ»
wire [31:0] RF_ID_reg2_data;//ï¿½Ä´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Öµï¿½ï¿½
////ï¿½Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Õ»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
//wire [4:0] ID_RF_reg1_addr;//ï¿½ï¿½ï¿½ï¿½Ö·
//wire [4:0] ID_RF_reg2_addr;//ï¿½ï¿½ï¿½ï¿½Ö·
//wire ID_RF_reg1;//ï¿½ï¿½Ê¹ï¿½ï¿½
//wire ID_RF_reg2;//ï¿½ï¿½Ê¹ï¿½ï¿½
//wire MEMWB_RF_wreg;//Ð´Ê¹ï¿½ï¿½
//wire [4:0] MEMWB_RF_wreg_addr;//Ð´ï¿½ï¿½Ö·
//wire [31:0] MEMWB_RF_wreg_data;//Ð´ï¿½ï¿½ï¿½ï¿½
//IDEXï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
wire [5:0] CL_IDEX_stall;//ï¿½ï¿½Í£ï¿½Åºï¿½
wire CL_IDEX_flush;//ï¿½ï¿½Í£ï¿½Åºï¿½
wire [7:0] ID_IDEX_aluop;//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
wire [2:0] ID_IDEX_alusel;//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
wire [31:0] ID_IDEX_reg1;//ï¿½ï¿½ï¿½ï¿½×¶ï¿½Òªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ô­ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»
wire [31:0] ID_IDEX_reg2;//ï¿½ï¿½ï¿½ï¿½×¶ï¿½Òªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ô­ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
wire ID_IDEX_wreg;//ï¿½ï¿½ï¿½ï¿½×¶ï¿½Ö¸ï¿½ï¿½ï¿½Ç·ï¿½Ð´Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Ö?
wire [4:0] ID_IDEX_wreg_addr;//ï¿½ï¿½ï¿½ï¿½×¶ï¿½Ö¸ï¿½ï¿½Ð´Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Ö?
wire [31:0] ID_IDEX_ins;//ï¿½ï¿½ï¿½ï¿½×¶ï¿½Ö¸ï¿½ï¿?
wire [31:0] ID_IDEX_ins_addr;//Ö¸ï¿½ï¿½ï¿½Ö?
wire ID_IDEX_isindelaysolt;//ï¿½Ó³Ù²Û±ï¿½Ö¾
wire ID_IDEX_next_isindelaysolt;//ï¿½Ó³Ù²Û±ï¿½Ö¾

//EXï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
wire [7:0] IDEX_EX_aluop;//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
wire [2:0] IDEX_EX_alusel;//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
wire [31:0] IDEX_EX_reg1_data;//Ô­ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»
wire [31:0] IDEX_EX_reg2_data;//Ô­ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
wire IDEX_EX_wreg;//Ö¸ï¿½ï¿½Ö´ï¿½ï¿½ï¿½Ç·ï¿½ÒªÐ´ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½
wire [4:0] IDEX_EX_wreg_addr;//Ð´ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Ö·
wire [31:0] IDEX_EX_ins;//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½
wire [31:0] IDEX_EX_ins_addr;//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½ï¿½Ö?
wire IDEX_EX_isindelayslot;//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½ï¿½ï¿½ï¿½Ó³Ù²ï¿½
wire [31:0] HILO_EX_hi;
wire [31:0] HILO_EX_lo;
wire [31:0] MEMWB_EX_hi;
wire [31:0] MEMWB_EX_lo;
wire MEMWB_EX_whilo;//ï¿½ï¿½ï¿½Ú»ï¿½Ð´ï¿½×¶Îµï¿½Ö¸ï¿½ï¿½ï¿½Ç·ï¿½ÒªÐ´HILOï¿½Ä´ï¿½ï¿½ï¿½
wire [31:0] MEM_EX_hi;
wire [31:0] MEM_EX_lo;
wire MEM_EX_whilo;//ï¿½ï¿½ï¿½Ú·Ã´ï¿½×¶Îµï¿½Ö¸ï¿½ï¿½ï¿½Ç·ï¿½ÒªÐ´HILOï¿½Ä´ï¿½ï¿½ï¿½
//EXï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ö¸ï¿½ï¿½
wire [63:0] EXMEM_EX_hilo_temp;
wire [1:0] EXMEM_EX_cnt;
wire DIV_EX_div_res;//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
wire DIV_EX_ready;//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
//EXMEMÄ£ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
wire [5:0] CL_EXMEM_stall;//ï¿½ï¿½Í£
wire CL_EXMEM_flush;//ï¿½ï¿½ï¿?
wire [31:0] EX_EXMEM_mem_addr;//Ö´ï¿½Ð½×¶Î¼ï¿½ï¿½Ø£ï¿½ï¿½æ´¢Ö¸ï¿½ï¿½ï¿½Ó¦ï¿½Ä´æ´¢ï¿½ï¿½ï¿½ï¿½Ö?
wire [31:0] EX_EXMEM_reg2;//Ö´ï¿½Ð½×¶Î´æ´¢Ö¸ï¿½ï¿½Òªï¿½æ´¢ï¿½ï¿½ï¿½ï¿½ï¿½Ý£ï¿½ï¿½ï¿½lwlÖ¸ï¿½ï¿½ÒªÐ´ï¿½ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½Ô­Ê¼Ö?
wire [31:0] EX_EXMEM_hi;//Ö´ï¿½Ð½×¶ï¿½ÒªÐ´ï¿½ï¿½hiï¿½Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Öµ
wire [31:0] EX_EXMEM_lo;
wire EX_EXMEM_whilo;//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½ï¿½Ç·ï¿½ÒªÐ´hiloï¿½Ä´ï¿½ï¿½ï¿½
wire [63:0] EX_EXMEM_hilo;//ï¿½ï¿½ï¿½ï¿½Ë·ï¿½ï¿½Ä½ï¿½ï¿½
wire [1:0] EX_EXMEM_cnt;//ï¿½ï¿½Ò»ï¿½×¶ï¿½Ê±ï¿½ï¿½ï¿½ï¿½ï¿½Ú´ï¿½ï¿½ï¿½Ö´ï¿½Ð½×¶ÎµÚ¼ï¿½ï¿½ï¿½ï¿½ï¿½
wire EX_EXMEM_isindelaysolt;//ï¿½Ã´ï¿½×¶ï¿½ï¿½Ç·ï¿½ï¿½ï¿½ï¿½Ó³Ù²ï¿½Ö¸ï¿½ï¿?
wire [31:0] EX_EXMEM_ins_addr;//ï¿½Ã´ï¿½×¶ï¿½Ö¸ï¿½ï¿½ï¿½Ö·
wire [7:0] EX_EXMEM_aluop;//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½Òªï¿½ï¿½ï¿½Ðµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
wire EX_EXMEM_wreg;//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½ï¿½Ç·ï¿½ÒªÐ´Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½
wire [31:0] EX_EXMEM_wreg_addr;//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½ÒªÐ´Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Ö·
wire [31:0] EX_EXMEM_wreg_data;//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½ÒªÐ´Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½Öµ
//MEMÄ£ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
wire EXMEM_MEM_wreg;//ï¿½Ã´ï¿½×¶ï¿½Ö¸ï¿½ï¿½ï¿½Ç·ï¿½ï¿½ï¿½ÒªÐ´ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿?
wire [31:0] EXMEM_MEM_wreg_addr;//ï¿½Ã´ï¿½×¶ï¿½ÒªÐ´ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Ö?
wire [31:0] EXMEM_MEM_wreg_data;//ï¿½Ã´ï¿½×¶ï¿½ÒªÐ´ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
wire [63:0] EXMEM_MEM_whilo;//ï¿½Ã´ï¿½×¶ï¿½Ö¸ï¿½ï¿½ï¿½Ç·ï¿½ÒªÐ´HILOï¿½Ä´ï¿½ï¿½ï¿½
wire [31:0] EXMEM_MEM_hi;
wire [31:0] EXMEM_MEM_lo;
wire [7:0] EXMEM_MEM_aluop;//ï¿½Ã´ï¿½×¶ï¿½Ö¸ï¿½ï¿½Òªï¿½ï¿½ï¿½Ðµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
wire [31:0] EXMEM_MEM_mem_addr;//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ý´æ´¢ï¿½ï¿½ï¿½ï¿½Ö·
wire [31:0] DM_MEM_mem_data;//ï¿½ï¿½ï¿½ï¿½ï¿½Ý´æ´¢ï¿½ï¿½ï¿½ï¿½È¡ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
wire [31:0] EXMEM_MEM_reg2;//ï¿½Ã´ï¿½×¶Î´æ´¢Ö¸ï¿½ï¿½Òªï¿½æ´¢ï¿½ï¿½ï¿½ï¿½ï¿½Ý£ï¿½ï¿½ï¿½lwlÖ¸ï¿½ï¿½ÒªÐ´ï¿½ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½Ô­Ê¼Ö?
wire EXMEM_MEM_isindelayslot;//ï¿½Ã´ï¿½×¶ï¿½ï¿½Ç·ï¿½Ê±ï¿½Ó³Ù²ï¿½Ö¸ï¿½ï¿?
wire [31:0] EXMEM_MEM_ins_addr;//ï¿½Ã´ï¿½×¶ï¿½Ö¸ï¿½ï¿½ï¿½Ö·
wire [31:0] DM_data;//À´×ÔÊý¾ÝÄÚ´æ
//DMÒýÏß
wire [31:0] MEM_DM_mem_addr;
wire MEM_DM_mem_we;
wire [31:0] MEM_DM_mem_data;

//MEMWBÄ£ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
wire [5:0] CL_MEMWB_stall;
wire CL_MEMWB_flush;
wire MEM_MEMWB_mem_wreg;//ï¿½Ç·ï¿½ÒªÐ´Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½
wire [31:0] MEM_MEMWB_mem_wreg_addr;//Ð´Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Ö·
wire [31:0] MEM_MEMWB_mem_wreg_data;//Ð´Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
wire [63:0] MEM_MEMWB_mem_whilo;//ï¿½Ã´ï¿½×¶ï¿½Ö¸ï¿½ï¿½ï¿½Ç·ï¿½ÒªÐ´HILOï¿½Ä´ï¿½ï¿½ï¿½
wire [31:0] MEM_MEMWB_mem_hi;//ï¿½Ã´ï¿½×¶ï¿½Ö¸ï¿½ï¿½Ð´HIï¿½Ä´ï¿½ï¿½ï¿½Öµ
wire [31:0] MEM_MEMWB_mem_lo;//ï¿½Ã´ï¿½×¶ï¿½Ö¸ï¿½ï¿½Ð´LOï¿½Ä´ï¿½ï¿½ï¿½Öµ
//HILOÄ£ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
wire MEMWB_HILO_we;//HILOÐ´Ê¹ï¿½ï¿½ï¿½Åºï¿½
wire [31:0] MEMWB_HILO_hi;//HILOÐ´hi
wire [31:0] MEMWB_HILO_lo;//HILOÐ´lo
//CLÄ£ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
wire stallreq_from_EX;
wire stallreq_from_ID;
//RF
wire ID_RF_re1;
wire ID_RF_re2;
wire [31:0] ID_RF_re1_addr;
wire [31:0] ID_RF_re2_addr;
wire MEMWB_RF_wreg;//Ê¹ÄÜ
wire [31:0] MEMWB_RF_wreg_addr;//µØÖ·
wire [31:0] MEMWB_RF_wreg_data;//Êý¾Ý
//ï¿½ï¿½ï¿½Ï¾ï¿½ï¿½Ç¶ï¿½ï¿½ï¿½ï¿½È«ï¿½ï¿½Ä£ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä£ï¿½é¶¨ï¿½ï¿?
Program_Counter PC_cpu(
    .clk(clk),
    .rst(rst),
    .I_FromCL_stall(CL_PC_stall),//ï¿½ï¿½ï¿½Ú³Ë³ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ë®ï¿½Ó³Ùµï¿½ï¿½Åºï¿½ï¿½ï¿½
    .I_FromCL_flush(CL_PC_flush),//ï¿½ï¿½ï¿½Ú³Ë³ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ë®ï¿½Ó³Ùµï¿½ï¿½Åºï¿½ï¿½ï¿½
    .I_FromCL_newpc(CL_PC_newpc),//ï¿½ï¿½ï¿½ï¿½ï¿½ì³£ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Âµï¿½Ö·ï¿½ï¿½ï¿½Ö½×¶Î²ï¿½ï¿½Ã¹ï¿?
    .I_FromID_branchflag(ID_PC_branchflag),//ï¿½ï¿½×ªÖ¸ï¿½ï¿½ï¿½Ó¦ï¿½ï¿½ï¿½ÅºÅ£ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½×ªï¿½ï¿½Ö·ï¿½ï¿?
    .I_FromID_branch_taraddr(ID_PC_branch_taraddr),//ï¿½ï¿½×ªï¿½ï¿½Ö·
    .O_ToIM_IFID_pc(PC_OUT_1)//ï¿½ï¿½ï¿½ï¿½ï¿½Ö¸ï¿½ï¿½ï¿½Ö·
    //output reg ce//pcÊ¹ï¿½ï¿½ï¿½Åºï¿½
);
    assign PC_IM_addr=PC_OUT_1;
    assign PC_IFID_pc=PC_OUT_1;
    
Instrution_Memory IM_cpu(
    .a(PC_IM_addr),
    .spo(IM_IFID_ins)
);

IF_ID IFID_cpu(
    .clk(clk),
    .rst(rst),
    .CL_stall(CL_IFID_stall),
    .CL_flush(CL_IFID_flush),
    .IF_pc(PC_IFID_pc),
    .IF_ins(IM_IFID_ins),
    .ID_pc(IFID_ID_pc),
    .ID_ins(IFID_ID_ins)
);

Instruction_Decoder ID_cpu(
    .clk(clk),
    .rst(rst),
    .I_FromIFID_pc(IFID_ID_pc),//ï¿½ï¿½ï¿½ï¿½×¶ï¿½Ö¸ï¿½ï¿½ï¿½Ó¦ï¿½Äµï¿½Ö·
    .I_FromIFID_ins(IFID_ID_ins),//ï¿½ï¿½ï¿½ï¿½×¶Îµï¿½Ö¸ï¿½ï¿?
//ï¿½ï¿½Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Õ»ï¿½ï¿½Ø²ï¿½ï¿½ï¿½
    .I_FromRF_reg1_data(RF_ID_reg1_data),//ï¿½Ó¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Õ»ï¿½ï¿½ï¿½ï¿½ï¿½Äµï¿½Ò»ï¿½ï¿½ï¿½Ë¿ï¿½ï¿½ï¿½ï¿½ï¿½
    .I_FromRF_reg2_data(RF_ID_reg2_data),//ï¿½Ó¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Õ»ï¿½ï¿½ï¿½ï¿½ï¿½ÄµÚ¶ï¿½ï¿½ï¿½ï¿½Ë¿ï¿½ï¿½ï¿½ï¿½ï¿½
    .O_ToRF_reg1(ID_RF_reg1),//ï¿½Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Õ»ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½Ë¿ï¿½Ê¹ï¿½ï¿½ï¿½Åºï¿½
    .O_ToRF_reg2(ID_RF_reg2),//ï¿½Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Õ»ï¿½Ú¶ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ë¿ï¿½Ê¹ï¿½ï¿½ï¿½Åºï¿½
    .O_ToRF_reg1_addr(ID_RF_reg1_addr),//ï¿½Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Õ»ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½Ë¿Úµï¿½Ö·
    .O_ToRF_reg2_addr(ID_RF_reg2_addr),//ï¿½Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Õ»ï¿½Ú¶ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ë¿Úµï¿½Ö·
    .O_ToIDEX_wreg(ID_IDEX_wreg),//ï¿½Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Õ»Ð´ï¿½Ë¿ï¿½Ê¹ï¿½ï¿½ï¿½Åºï¿½
    .O_ToRF_wreg_addr(ID_IDEX_wreg_addr),//ï¿½Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Õ»Ð´ï¿½Ë¿Úµï¿½Ö·
    .O_ToIDEX_aluop(ID_IDEX_aluop),//ï¿½ï¿½ï¿½ï¿½×¶ï¿½Òªï¿½ï¿½ï¿½Ðµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
    .O_ToIDEX_alusel(ID_IDEX_alusel),//ï¿½ï¿½ï¿½ï¿½×¶ï¿½Òªï¿½ï¿½ï¿½Ðµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
    .O_ToIDEX_reg1(ID_IDEX_reg1),//ï¿½ï¿½ï¿½ï¿½×¶ï¿½Òªï¿½ï¿½ï¿½Ðµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ô­ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»
    .O_ToIDEX_reg2(ID_IDEX_reg2),//ï¿½ï¿½ï¿½ï¿½×¶ï¿½Òªï¿½ï¿½ï¿½Ðµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ô­ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
//ï¿½ï¿½ï¿½Â½Ó¿ï¿½ï¿½ï¿½ÒªÎªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ø½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ï¸ï¿½Ä¶ï¿½P113ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
    .I_FromEX_wreg(EX_ID_wreg),//ï¿½ï¿½ï¿½ï¿½Ö´ï¿½Ð½×¶Îµï¿½Ö¸ï¿½ï¿½ï¿½Ç·ï¿½ÒªÐ´Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½
    .I_FromEX_wreg_addr(EX_ID_wreg_addr),//ï¿½ï¿½ï¿½ï¿½Ö´ï¿½Ð½×¶Îµï¿½Ö¸ï¿½ï¿½ÒªÐ´Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Ö·
    .I_FromEX_wreg_data(EX_ID_wreg_data),//ï¿½ï¿½ï¿½ï¿½Ö´ï¿½Ð½×¶Îµï¿½Ö¸ï¿½ï¿½Ð´Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
    .I_FromEX_aluop(EX_ID_aluop),//ï¿½ï¿½ï¿½ï¿½Ö´ï¿½Ð½×¶Îµï¿½Ö¸ï¿½ï¿½Ð´Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
    .I_FromMEM_wreg(MEM_ID_wreg),//ï¿½ï¿½ï¿½Ú·Ã´ï¿½×¶Îµï¿½Ö¸ï¿½ï¿½ï¿½Ç·ï¿½ÒªÐ´Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿?
    .I_FromMEM_wreg_addr(MEM_ID_wreg_addr),//ï¿½ï¿½ï¿½Ú·Ã´ï¿½×¶Îµï¿½Ö¸ï¿½ï¿½ÒªÐ´Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Ö?
    .I_FromMEM_wreg_data(MEM_ID_wreg_data),//ï¿½ï¿½ï¿½Ú·Ã´ï¿½×¶Îµï¿½Ö¸ï¿½ï¿½Ð´Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
//ï¿½ï¿½×ªÖ¸ï¿½ï¿½ï¿½Ó³Ù²ï¿½ï¿½Åºï¿½
    .I_FromIDEX_isindelayslot(IDEX_ID_isindelayslot),//ï¿½ï¿½Ç°ï¿½ï¿½ï¿½ï¿½Ö¸ï¿½ï¿½ï¿½Ç·ï¿½ï¿½ï¿½ï¿½Ó³Ù²ï¿½
    .O_ToIDEX_isindelayslot(ID_IDEX_next_isindelaysolt),//ï¿½ï¿½Ç°ï¿½ï¿½ï¿½ï¿½Ö¸ï¿½ï¿½ï¿½Ç·ï¿½ï¿½ï¿½ï¿½Ó³Ù²ï¿½  ï¿½Þ¸ï¿½Îªregï¿½ï¿½ï¿½ï¿½
    .O_ToPC_branchflag(ID_PC_branchflag),//ï¿½ï¿½×ªï¿½Åºï¿½
    .O_ToPC_branch_taraddr(ID_PC_branch_taraddr),//ï¿½ï¿½×ªÄ¿ï¿½Äµï¿½Ö·
//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ö¸ï¿½ï¿½ï¿½ï¿½Ë®Í£Ö¹ï¿½ï¿½ï¿½ï¿½ï¿½Åºï¿½
    .stallreq(stallreq_from_ID), //ï¿½Þ¸ï¿½Îªwireï¿½ï¿½ï¿½ï¿½
    .O_ToIDEX_ins_addr(ID_IDEX_ins_addr)
//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¿Ç°ï¿½Ã²ï¿½ï¿½ï¿½
//    .I_FromEX_aluop_i, //ï¿½ï¿½ï¿½ï¿½Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
//    .O_ToIDEX_wd, //ï¿½ï¿½ï¿½ï¿½×¶Îµï¿½Ö¸ï¿½ï¿½ÒªÐ´ï¿½ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Ö·
//    .O_ToIDEX_link_addr, //×ªï¿½ï¿½Ö¸ï¿½ï¿½Òªï¿½ï¿½ï¿½ï¿½Ä·ï¿½ï¿½Øµï¿½Ö?
//    .O_ToIDEX_next_isindelayslot, //ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½×¶Îµï¿½Ö¸ï¿½ï¿½ï¿½Ç·ï¿½Î»ï¿½ï¿½ï¿½Ó³Ù²ï¿?
//    .O_ToIDEX_inst, //ï¿½ï¿½Ç°ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½×¶Îµï¿½Ö¸ï¿½ï¿?
//    .O_ToIDEX_excepttype, //ï¿½Õ¼ï¿½ï¿½ï¿½ï¿½ì³£ï¿½ï¿½Ï¢
//    .O_ToIDEX_current_inst_address //ï¿½ï¿½ï¿½ï¿½×¶ï¿½Ö¸ï¿½ï¿½Äµï¿½Ö·
);

ID_EX IDEX_cpu(
    .clk(clk),
    .rst(rst),
    .CL_stall(CL_IDEX_stall),
    .CL_flush(CL_IDEX_flush),
    .ID_alusel(ID_IDEX_alusel),//ï¿½ï¿½ï¿½ï¿½×¶ï¿½Òªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
    .ID_aluop(ID_IDEX_aluop),//ï¿½ï¿½ï¿½ï¿½×¶ï¿½Ö¸ï¿½ï¿½Òªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
    .ID_reg1(ID_IDEX_reg1),//ï¿½ï¿½ï¿½ï¿½×¶ï¿½Ö¸ï¿½ï¿½Òªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ô´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»
    .ID_reg2(ID_IDEX_reg2),//ï¿½ï¿½ï¿½ï¿½×¶ï¿½Ö¸ï¿½ï¿½Òªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ô´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
    .ID_wreg(ID_IDEX_wreg),//ï¿½ï¿½ï¿½ï¿½×¶ï¿½Ö¸ï¿½ï¿½ï¿½Ç·ï¿½ÒªÐ´ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿?
    .ID_wreg_addr(ID_IDEX_wreg_addr),//ï¿½ï¿½ï¿½ï¿½×¶ï¿½Ö¸ï¿½ï¿½ÒªÐ´ï¿½ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Ö·
    .ID_ins(ID_IDEX_ins),//ï¿½ï¿½ï¿½ï¿½IDï¿½Ä¾ï¿½ï¿½ï¿½Ö¸ï¿½ï¿½Öµ
    .ID_ins_addr(ID_IDEX_ins_addr),//ï¿½ï¿½ï¿½ï¿½IDï¿½Ä¾ï¿½ï¿½ï¿½Ö¸ï¿½ï¿½ï¿½Ö?
    .ID_isindelayslot(ID_IDEX_isindelaysolt),//ï¿½Ó³Ù²ï¿½
    .EX_alusel(IDEX_EX_alusel),//Ö´ï¿½Ð½×¶ï¿½Òªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
    .EX_aluop(IDEX_EX_aluop),//Ö´ï¿½Ð½×¶ï¿½Òªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
    .EX_reg1(IDEX_EX_reg1_data),//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½Òªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ô´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò?
    .EX_reg2(IDEX_EX_reg2_data),//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½Òªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ô´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
    .EX_wreg_addr(IDEX_EX_wreg_addr),//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½ÒªÐ´ï¿½ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Ö?
    .EX_wreg(IDEX_EX_wreg),//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½ï¿½Ç·ï¿½ÒªÐ´ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½
    .EX_ins(IDEX_EX_wreg_ins),//ï¿½ï¿½exï¿½Ä¾ï¿½ï¿½ï¿½Ö¸ï¿½ï¿½Öµ
    .EX_ins_addr(IDEX_EX_ins_addr),//ï¿½ï¿½EXï¿½Ä¾ï¿½ï¿½ï¿½Ö¸ï¿½ï¿½ï¿½Ö?
    .EX_isindelayslot(IDEX_EX_isindelayslot)
);

EX EX_cpu(
    .clk(clk),
    .rst(rst),
    .I_FromIDEX_alusel(IDEX_EX_alusel),//Ö´ï¿½Ð½×¶ï¿½Òªï¿½ï¿½ï¿½ï¿½Ö¸ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
    .I_FromIDEX_aluop(IDEX_EX_alusel),//Ö´ï¿½Ð½×¶ï¿½Òªï¿½ï¿½ï¿½ï¿½Ö¸ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
    .I_FromIDEX_reg1(IDEX_EX_reg1_data),//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ô´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò?
    .I_FromIDEX_reg2(IDEX_EX_reg2_data),//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ô´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
    .I_FromIDEX_wreg(IDEX_EX_wreg),//Ö¸ï¿½ï¿½Ö´ï¿½ï¿½ï¿½Ç·ï¿½ ÒªÐ´ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½
    .I_FromIDEX_wreg_addr(IDEX_EX_wreg_addr),//Ö¸ï¿½ï¿½Ö´ï¿½ï¿½ÒªÐ´ï¿½ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Ö?
    .I_FromIDEX_ins(IDEX_EX_ins),
    .I_FromIDEX_ins_addr(IDEX_EX_ins_addr),//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½ï¿½Ö?
    .O_ToEXMEM_reg2(EX_EXMEM_reg2),//ï¿½æ´¢Ö¸ï¿½ï¿½Òªï¿½æ´¢ï¿½ï¿½ï¿½ï¿½ï¿½Ý£ï¿½ï¿½ï¿½ï¿½ï¿½lwrÖ¸ï¿½ï¿½ÒªÐ´ï¿½ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½Ô­Ê¼Ö?
//HILOÄ£ï¿½ï¿½ï¿½ï¿½
    .I_FromHILO_hi(HILO_EX_hi),//hiloï¿½ï¿½hiï¿½ï¿½Öµ
    .I_FromHILO_lo(HILO_EX_lo),//hiloï¿½ï¿½loï¿½ï¿½Öµ
//memï¿½×¶ï¿½ï¿½ï¿½hiloï¿½Ä½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
    .I_FromMEM_whilo(MEM_EX_whilo),//ï¿½Ã´ï¿½×¶ï¿½Ö¸ï¿½ï¿½ï¿½Ç·ï¿½ï¿½ï¿½ÒªÐ´HILOï¿½Ä´ï¿½ï¿½ï¿½
    .I_FromMEM_wb_hi(MEM_EX_hi),//ï¿½Ã´ï¿½×¶ï¿½Ð´ï¿½ï¿½HILOï¿½ï¿½hiï¿½ï¿½Öµ
    .I_FromMEM_wb_lo(MEM_EX_lo),//ï¿½Ã´ï¿½×¶ï¿½Ð´ï¿½ï¿½HILOï¿½ï¿½loï¿½ï¿½Öµ
//memwbï¿½×¶ï¿½ï¿½ï¿½hiloï¿½Ä½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
    .I_FromMEMWB_whilo(MEMWB_EX_whilo),//ï¿½ï¿½Ð´ï¿½×¶ï¿½Ö¸ï¿½ï¿½ï¿½Ç·ï¿½ï¿½ï¿½ÒªÐ´HILOï¿½Ä´ï¿½ï¿½ï¿½
    .I_FromMEMWB_wb_hi(MEMWB_EX_hi),//ï¿½ï¿½Ð´ï¿½×¶ï¿½Ð´ï¿½ï¿½HILOï¿½ï¿½hiï¿½ï¿½Öµ
    .I_FromMEMWB_wb_lo(MEMWB_EX_lo),//ï¿½ï¿½Ð´ï¿½×¶ï¿½Ð´ï¿½ï¿½HILOï¿½ï¿½loï¿½ï¿½Öµ
//ï¿½æ¼°ï¿½Ë·ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
    .I_FromEXMEM_hilo_temp(EXMEM_EX_hilo_temp),//ï¿½ï¿½Ò»ï¿½ï¿½Ö´ï¿½ï¿½ï¿½ï¿½ï¿½ÚµÃµï¿½ï¿½Ä³Ë·ï¿½ï¿½ï¿½ï¿?
    .I_FromEXMEM_cnt(EXMEM_EX_cnt),//Dï¿½ï¿½Ç°ï¿½ï¿½ï¿½ï¿½Ö´ï¿½Ð½×¶ÎµÄµÚ¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
    .O_ToEXMEM_hilo_temp(EX_EXMEM_hilo),//ï¿½ï¿½Ò»ï¿½ï¿½Ö´ï¿½ï¿½ï¿½ï¿½ï¿½ÚµÃµï¿½ï¿½Ä³Ë·ï¿½ï¿½ï¿½ï¿?
    .O_ToEXMEM_cnt(EX_EXMEM_cnt),//ï¿½ï¿½Ò»ï¿½ï¿½Ê±ï¿½ï¿½ï¿½ï¿½ï¿½Ú´ï¿½ï¿½ï¿½Ö´ï¿½Ð½×¶ÎµÄµÚ¼ï¿½ï¿½ï¿½Ê¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
//ï¿½æ¼°ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
    .I_FromDIV_divready(DIV_EX_ready),//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ç·ï¿½ï¿½ï¿½ï¿?
    .I_FromDIV_divres(),//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
    .O_ToDIV_signediv(),//ï¿½Ç·ï¿½Îªï¿½Ð·ï¿½ï¿½Å³ï¿½ï¿½ï¿½1-->ï¿½Ð·ï¿½ï¿½Å£ï¿½0->ï¿½Þ·ï¿½ï¿½ï¿½
    .O_ToDIV_opdata1(),//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
    .O_ToDIV_opdata2(),//ï¿½ï¿½ï¿½ï¿½
    .O_ToDIV_divstart(),//ï¿½ï¿½ï¿½ï¿½ï¿½Ç·ï¿½Ê¼
//ï¿½Ó³Ù²ï¿½ï¿½ï¿½Ø±ï¿½ï¿½ï¿?
    .I_FromIDEX_isindelayslot(IDEX_EX_isindelayslot),//ï¿½Ó³Ù²Û±ï¿½ï¿?
    .O_TOEXMEM_isindelayslot(EX_EXMEM_isindelaysolt),//ï¿½Ó³Ù²Û±ï¿½ï¿?
//ï¿½ï¿½Ã´æ£¬IDï¿½ï¿½ØµÄ½Ó¿ï¿?
    .O_To_EXMEM_mem_addr(EX_EXMEM_mem_addr),//ï¿½ï¿½ï¿½Ø´æ´¢Ö¸ï¿½ï¿½ï¿½Ó¦ï¿½Ä´æ´¢ï¿½ï¿½ï¿½ï¿½Ö?
    .O_To_ID_EXMEM_wreg(EX_OUT_1),//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ç·ï¿½ï¿½ï¿½ÒªÐ´ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½
    .O_To_ID_EXMEM_aluop(EX_OUT_2),//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½ï¿½ï¿½Ðµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
    .O_To_ID_EXMEM_wreg_addr(EX_OUT_3),//ï¿½ï¿½ï¿½Ø´æ´¢Ö¸ï¿½ï¿½ï¿½Ó¦ï¿½Ä´æ´¢ï¿½ï¿½ï¿½ï¿½Ö?
    .O_To_ID_EXMEM_wreg_data(EX_OUT_4),//ï¿½æ´¢Ö¸ï¿½ï¿½Òªï¿½æ´¢ï¿½ï¿½ï¿½ï¿½ï¿½Ý£ï¿½ï¿½Ô¼ï¿½ï¿½ï¿½ï¿½Øµï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Ô­Ê¼Öµ
//ï¿½ï¿½Ë®ï¿½ï¿½Í£ï¿½ï¿½ï¿½ï¿½
    .stallreq(stallreq_from_EX)//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ë®ï¿½ï¿½Í£
);
    assign EX_EXMEM_aluop=EX_OUT_2;
    assign EX_EXMEM_wreg=EX_OUT_1 ;
    assign EX_EXMEM_wreg_addr=EX_OUT_3 ;
    assign EX_EXMEM_wreg_data=EX_OUT_4 ;
    assign EX_ID_aluop=EX_OUT_2 ;
    assign EX_ID_wreg=EX_OUT_1 ;
    assign EX_ID_wreg_addr=EX_OUT_3 ;
    assign EX_ID_wreg_data=EX_OUT_4 ;
    
EX_MEM EXMEM_cpu(
    .clk(clk),
    .rst(rst),
    .CL_stall(CL_EXMEM_stall),
    .CL_flush(CL_EXMEM_flush),
    .EX_mem_addr(EX_EXMEM_mem_addr),//Ö´ï¿½Ð½×¶ï¿½ÒªÐ´ï¿½ï¿½ï¿½Ú´ï¿½ï¿½Ö?
    .EX_reg2(EX_EXMEM_reg2),
    .EX_whilo(EX_EXMEM_whilo),
    .EX_hi(EX_EXMEM_hi),
    .EX_lo(EX_EXMEM_lo),
    .EX_hilo(EX_EXMEM_hilo),
    .EX_cnt(EX_EXMEM_cnt),
    .EX_isindelayslot(EX_EXMEM_isindelaysolt),
    .EX_ins_addr(EX_EXMEM_ins_addr),
    .Ex_aluop(EX_EXMEM_aluop),
    .EX_wreg(EX_EXMEM_wreg),//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½Ö´ï¿½Ðºï¿½ï¿½Ç·ï¿½ÒªÐ´ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½
    .EX_wreg_addr(EX_EXMEM_wreg_addr),//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½Ö´ï¿½Ðºï¿½ÒªÐ´ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½Äµï¿½Ö·
    .EX_wreg_data(EX_EXMEM_wreg_data),//Ö´ï¿½Ð½×¶ï¿½Ö¸ï¿½ï¿½Ö´ï¿½Ðºï¿½ÒªÐ´ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Öµ
    .MEM_wreg(EXMEM_MEM_wreg),//ï¿½Ã´ï¿½×¶ï¿½Ö¸ï¿½ï¿½Ö´ï¿½Ðºï¿½ï¿½Ç·ï¿½ÒªÐ´ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿?
    .MEM_wreg_addr(EXMEM_MEM_wreg_addr),//ï¿½Ã´ï¿½×¶ï¿½Ö¸ï¿½ï¿½Ö´ï¿½Ðºï¿½ÒªÐ´ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½Äµï¿½Ö?
    .MEM_wreg_data(EXMEM_MEM_wreg_adta),//ï¿½Ã´ï¿½×¶ï¿½Ö¸ï¿½ï¿½Ö´ï¿½Ðºï¿½ÒªÐ´ï¿½ï¿½Ä¿ï¿½Ä¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Ö?
    .MEM_hi(EXMEM_MEM_hi),
    .MEM_lo(EXMEM_MEM_lo),
    .MEM_whilo(EXMEM_MEM_whilo),
    .MEM_aluop(EXMEM_MEM_aluop),
    .MEM_mem_addr(EXMEM_MEM_mem_addr),//Ð´ï¿½Ú´ï¿½ï¿½Ö?
    .MEM_reg2(EXMEM_MEM_reg2),
    .MEM_isindelayslot(EXMEM_MEM_isindelayslot),
    .MEM_ins_adddr(EXMEM_MEM_ins_addr),
    .MEM_hilo(EXMEM_EX_hilo_temp),
    .MEM_cnt(EXMEM_EX_cnt) 
);

MEM MEM_cpu(
    .rst(rst),
    .I_FROMEX_MEM_wreg(EXMEM_MEM_wreg),
    .I_FROMEX_MEM_wd(EXMEM_MEM_wreg_addr),
    .I_FROMEX_MEM_wdata(EXMEM_MEM_wreg_data),
    .O_TOMEM_WB_ID_wreg(MEM_OUT_1),
    .O_TOMEM_WB_ID_wd(MEM_OUT_2),
    .O_TOMEM_WB_ID_wdata(MEM_OUT_3),
    .I_FROMEX_MEM_whilo(EXMEM_MEM_whilo),
    .I_FROMEX_MEM_hi(EXMEM_MEM_hi),
    .I_FROMEX_MEM_lo(EXMEM_MEM_lo),
    .O_TOMEM_WB_EX_whilo(MEM_OUT_4),
    .O_TOMEM_WB_EX_hi(MEM_OUT_5),
    .O_TOMEM_WB_EX_lo(MEM_OUT_6),
    .I_FROMEX_MEM_aloup(EXMEM_MEM_aluop),
    .I_FROMEX_MEM_mem_addr(EXMEM_MEM_mem_addr),
//    .I_FROMEX_MEM_mem_data(EXMEM_MEM_mem_data),
    . I_FROMDATA_RAM_mem_data(DM_data),
	.O_TODATA_RAM_mem_addr(),//è¦è®¿é®çæ°æ®å­å¨å¨çå°å
	.O_TODATA_RAM_mem_we(),//æ¯å¦æ¯åæä½ï¼ä¸º1è¡¨ç¤ºæ¯åæä½
	.O_TODATA_RAM_mem_sel(),//å­èéæ©ä¿¡å·
	.O_TODATA_RAM_mem_data(),//è¦åå¥æ°æ®å­å¨å¨çæ°æ?
    .I_FROMEX_MEM_isindelayslot(EXMEM_MEM_isindelayslot),
    .O_TOMEM_WB_isindelayslot()
);
    assign MEM_MEMWB_mem_wreg=MEM_OUT_1;
    assign MEM_ID_wreg=MEM_OUT_1;
    assign MEM_MEMWB_mem_wreg_addr=MEM_OUT_2;
    assign MEM_ID_wreg_addr=MEM_OUT_2;
    assign MEM_MEMWB_mem_wreg_data=MEM_OUT_3;
    assign MEM_ID_wreg_data=MEM_OUT_3;
    assign MEM_MEMWB_mem_whilo=MEM_OUT_4;
    assign MEM_EX_whilo=MEM_OUT_4;
    assign MEM_MEMWB_mem_hi=MEM_OUT_5;
    assign MEM_EX_hi=MEM_OUT_5;
    assign MEM_MEMWB_mem_lo=MEM_OUT_6;
    assign MEM_EX_lo=MEM_OUT_6;


Data_Memory DM_cpu(
    .clk(clk),
    .a(MEM_DM_mem_addr),
    .d(MEM_DM_mem_data),
    .w(MEM_DM_mem_we),
    .spo(DM_data)
);

MEM_WB MEMWB_cpu(
    .clk(clk),
    .rst(rst),
    .MEM_wreg(MEM_MEMWB_mem_wreg),//·Ã´æ½×¶ÎÖ¸Áî×îÖÕÊÇ·ñÓÐÒªÐ´ÈëµÄÄ¿µÄ¼Ä´æÆ÷
    .MEM_wreg_addr(MEM_MEMWB_mem_wreg_addr),//·Ã´æ½×¶ÎÖ¸Áî×îÖÕÒªÐ´ÈëµÄÄ¿µÄ¼Ä´æÆ÷µØÖ·
    .MEM_wreg_data(MEM_MEMWB_mem_wreg_data),//·Ã´æ½×¶ÎÖ¸Áî×îÖÕÒªÐ´ÈëµÄÄ¿µÄ¼Ä´æÆ÷Êý¾Ý
    .WB_wreg(),//·Ã´æ½×¶ÎÖ¸Áî×îÖÕÊÇ·ñÓÐÒªÐ´ÈëµÄÄ¿µÄ¼Ä´æÆ÷
    .WB_wreg_addr(),//·Ã´æ½×¶ÎÖ¸Áî×îÖÕÒªÐ´ÈëµÄÄ¿µÄ¼Ä´æÆ÷µØÖ·
    .WB_wreg_data(),//·Ã´æ½×¶ÎÖ¸Áî×îÖÕÒªÐ´ÈëµÄÄ¿µÄ¼Ä´æÆ÷Êý¾Ý
    //Î»ÒÆÖ¸ÁîµÄhiloÏà¹Ø½Ó¿Ú
    .MEM_whilo(MEM_MEMWB_mem_whilo),//ÊÇ·ñÒªÐ´hilo
    .MEM_hi_data(MEM_MEMWB_mem_hi),//Ð´hiµÄÖµ
    .MEM_lo_data(MEM_MEMWB_mem_lo),//Ð´hiµÄÖµ
    .WB_whilo(MEMWB_OUT_1),//ÊÇ·ñÒªÐ´hilo
    .WB_hi_data(MEMWB_OUT_2),//Ð´hiµÄÖµ
    .WB_lo_data(MEMWB_OUT_3),//Ð´hiµÄÖµ
    .CL_stall(CL_MEMWB_stall),
    .CL_flush(CL_MEMWB_flush)
);
    assign MEMWB_HILO_we=MEMWB_OUT_1;
    assign MEMWB_EX_whilo=MEMWB_OUT_1;
    assign MEMWB_hi_data=MEMWB_OUT_2;
    assign MEMWB_EX_hi=MEMWB_OUT_2;
    assign MEMWB_lo_data=MEMWB_OUT_3;
    assign MEMWB_EX_lo=MEMWB_OUT_3;
    
HILO HILO_cpu(
    .clk(clk),
    .rst(rst),
    .I_FromMEMWB_wreg(MEMWB_HILO_we),//HILO¼Ä´æÆ÷Ð´Ê¹ÄÜÐÅºÅ
    .I_FromMEMWB_hi(MEMWB_hi_data),//Ð´ÈëhiµÄÖµ
    .I_FromMEMWB_lo(MEMWB_lo_data),//Ð´ÈëloµÄÖµ
    .O_ToEX_hi(HILO_EX_hi),//¶Á³öµ½EXµÄhiµÄÖµ
    .O_ToEX_lo(HILO_EX_lo)//¶Á³öµ½EXµÄloµÄÖµ
);

Ctrl CL_cpu(
    .clk(clk),
    .rst(rst),
    .I_FromID_stallreq(stallreq_from_ID),//´¦ÓÚÒëÂë½×¶ÎÖ¸ÁîÊÇ·ñÇëÇóÁ÷Ë®ÏßÔÝÍ£
    .I_FromEX_stallreq(stallreq_from_EX),//´¦ÓÚÖ´ÐÐ½×¶ÎÖ¸ÁîÊÇ·ñÇëÇóÁ÷Ë®ÏßÔÝÍ£
    .stall(CL_OUT_1),//¿ØÖÆÁ÷Ë®ÏßÔÝÍ£ÐÅºÅ
    .flush(CL_OUT_2),
    .O_ToPC_new_pc(CL_PC_newpc)
);
    assign CL_PC_stall=CL_OUT_1;
    assign CL_IFID_stall=CL_OUT_1;
    assign CL_IDEX_stall=CL_OUT_1;
    assign CL_EXMEM_stall=CL_OUT_1;
    assign CL_MEMWB_stall=CL_OUT_1;
    assign CL_PC_flush=CL_OUT_2;
    assign CL_IFID_flush=CL_OUT_2;
    assign CL_IDEX_flush=CL_OUT_2;
    assign CL_EXMEM_flush=CL_OUT_2;
    assign CL_MEMWB_flush=CL_OUT_2;


Register_File RF_cpu(
    .clk(clk),
    .rst(rst),
    .I_FromMEM_WB_we(MEMWB_RF_wreg),
    .I_FromMEM_WB_waddr(MEMWB_RF_wreg_addr),
    .I_FromMEM_WB_wdata(MEMWB_RF_wreg_data),
	.I_FromID_re1(ID_RF_re1),
	.I_FromID_raddr1(ID_RF_re1_addr),
	.O_ToID_rdata1(RF_ID_reg1_data),
    .I_FromID_re2(ID_RF_re2),
    .I_FromID_raddr2(ID_RF_re2_addr),
    .O_ToID_rdata2(RF_ID_reg2_data)
);

endmodule
